# Matchmaker

The matchmaker service selects groups of players suitable for playing multiplayer matches together.

## Tools

**Tool** | **Version** | **Used for**
Go SDK | 1.18+ | Development
Docker | 20.10+ (API version 1.41+) | Development / Build / Running
Earthly | 0.6.x | Development / Build

## Build container image

```bash
earthly +container-image
```

Alternatively, from the repository root

```bash
earthly ./matchmaker+container-image
```

## Run container

```bash
docker run -d --rm -p 4447:4447 --name matchmaker matchmaker:latest
```

## Stop container

```bash
docker stop matchmaker
```

## Configuration

The following environment variables are supported.

 **Name** | **Description** | **Example**
---|---|---
`LOG_LEVEL` | A zerolog-compatible log level value. | `info` (default)
`PORT` | The port for the HTTP server to listen at. | `4447` (default)
`ZONEINFO` | Preferred [tz database] location. See [`time.LoadLocation`] | `/zoneinfo` (default: empty)

[tz database]: https://en.wikipedia.org/wiki/Tz_database
[`time.LoadLocation`]: https://pkg.go.dev/time#LoadLocation

## Invoke the API

You have several options.

1. Geneerate a Connect RPC client from the API spec.
   So far this is only possible for Go.
2. Generate a gRPC / gRPC-Web client from the API spec.
   `connect-go` is compatible with those.
3. Use cURL / an HTTP client.
   - [`rpc/matchmaking/v1/api.proto`] is the API spec.
   - See the docs on [invoking Connect APIs with HTTP clients].
   - The [JSON <-> Protobuf mapping] is documented separately

[`rpc/matchmaking/v1/api.proto`]: ./rpc/matchmaking/v1/api.proto
[invoking Connect APIs with HTTP clients]: https://connect.build/docs/browsers-and-curl
[JSON <-> Protobuf mapping]: https://developers.google.com/protocol-buffers/docs/proto3#json

## Development

### For each commit

Ensure the `go.mod` and `go.sum` files are tidy.
Run the following command after changing dependencies.

```
go mod tidy
```

Ensure the code is properly formatted.
Run the following command if your editor does not do this for you already.

```
go fmt ./...
```

Ensure the autogenerated code is up to date.
If you changed

- the API specification,
- tool dependency versions, or
- `generate.go`

run the following command:

```
go generate ./...

```
